/*
PowerDNS Authoritative HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.15
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RingStatisticItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RingStatisticItem{}

// RingStatisticItem struct for RingStatisticItem
type RingStatisticItem struct {
	// Item name
	Name *string `json:"name,omitempty"`
	// Set to \"RingStatisticItem\"
	Type *string `json:"type,omitempty"`
	// Ring size
	Size *int32 `json:"size,omitempty"`
	// Named values
	Value []SimpleStatisticItem `json:"value,omitempty"`
}

// NewRingStatisticItem instantiates a new RingStatisticItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRingStatisticItem() *RingStatisticItem {
	this := RingStatisticItem{}
	return &this
}

// NewRingStatisticItemWithDefaults instantiates a new RingStatisticItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRingStatisticItemWithDefaults() *RingStatisticItem {
	this := RingStatisticItem{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RingStatisticItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RingStatisticItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RingStatisticItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RingStatisticItem) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RingStatisticItem) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RingStatisticItem) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RingStatisticItem) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RingStatisticItem) SetType(v string) {
	o.Type = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *RingStatisticItem) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RingStatisticItem) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *RingStatisticItem) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *RingStatisticItem) SetSize(v int32) {
	o.Size = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *RingStatisticItem) GetValue() []SimpleStatisticItem {
	if o == nil || IsNil(o.Value) {
		var ret []SimpleStatisticItem
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RingStatisticItem) GetValueOk() ([]SimpleStatisticItem, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RingStatisticItem) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []SimpleStatisticItem and assigns it to the Value field.
func (o *RingStatisticItem) SetValue(v []SimpleStatisticItem) {
	o.Value = v
}

func (o RingStatisticItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RingStatisticItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableRingStatisticItem struct {
	value *RingStatisticItem
	isSet bool
}

func (v NullableRingStatisticItem) Get() *RingStatisticItem {
	return v.value
}

func (v *NullableRingStatisticItem) Set(val *RingStatisticItem) {
	v.value = val
	v.isSet = true
}

func (v NullableRingStatisticItem) IsSet() bool {
	return v.isSet
}

func (v *NullableRingStatisticItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRingStatisticItem(val *RingStatisticItem) *NullableRingStatisticItem {
	return &NullableRingStatisticItem{value: val, isSet: true}
}

func (v NullableRingStatisticItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRingStatisticItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


