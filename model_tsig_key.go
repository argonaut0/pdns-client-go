/*
PowerDNS Authoritative HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.15
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TSIGKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TSIGKey{}

// TSIGKey A TSIG key that can be used to authenticate NOTIFY, AXFR, and DNSUPDATE queries.
type TSIGKey struct {
	// The name of the key
	Name *string `json:"name,omitempty"`
	// The ID for this key, used in the TSIGkey URL endpoint.
	Id *string `json:"id,omitempty"`
	// The algorithm of the TSIG key
	Algorithm *string `json:"algorithm,omitempty"`
	// The Base64 encoded secret key, empty when listing keys. MAY be empty when POSTing to have the server generate the key material
	Key *string `json:"key,omitempty"`
	// Set to \"TSIGKey\"
	Type *string `json:"type,omitempty"`
}

// NewTSIGKey instantiates a new TSIGKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTSIGKey() *TSIGKey {
	this := TSIGKey{}
	return &this
}

// NewTSIGKeyWithDefaults instantiates a new TSIGKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTSIGKeyWithDefaults() *TSIGKey {
	this := TSIGKey{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TSIGKey) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSIGKey) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TSIGKey) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TSIGKey) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TSIGKey) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSIGKey) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TSIGKey) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TSIGKey) SetId(v string) {
	o.Id = &v
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *TSIGKey) GetAlgorithm() string {
	if o == nil || IsNil(o.Algorithm) {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSIGKey) GetAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.Algorithm) {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *TSIGKey) HasAlgorithm() bool {
	if o != nil && !IsNil(o.Algorithm) {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *TSIGKey) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *TSIGKey) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSIGKey) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *TSIGKey) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *TSIGKey) SetKey(v string) {
	o.Key = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TSIGKey) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSIGKey) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TSIGKey) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TSIGKey) SetType(v string) {
	o.Type = &v
}

func (o TSIGKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TSIGKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Algorithm) {
		toSerialize["algorithm"] = o.Algorithm
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableTSIGKey struct {
	value *TSIGKey
	isSet bool
}

func (v NullableTSIGKey) Get() *TSIGKey {
	return v.value
}

func (v *NullableTSIGKey) Set(val *TSIGKey) {
	v.value = val
	v.isSet = true
}

func (v NullableTSIGKey) IsSet() bool {
	return v.isSet
}

func (v *NullableTSIGKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSIGKey(val *TSIGKey) *NullableTSIGKey {
	return &NullableTSIGKey{value: val, isSet: true}
}

func (v NullableTSIGKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSIGKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


